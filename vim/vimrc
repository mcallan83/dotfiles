" vim:fdm=marker

" NeoBundle {{{

if has('vim_starting')
    if &compatible
      set nocompatible
    endif
    set runtimepath+=~/.vim/bundle/neobundle.vim/
endif
let vundle_readme=expand('~/.vim/bundle/neobundle.vim/README.md')
if !filereadable(vundle_readme)
    echo "Installing NeoBundle..."
    echo ""
    silent !mkdir -p ~/.vim/bundle
    silent !git clone https://github.com/Shougo/neobundle.vim ~/.vim/bundle/neobundle.vim/
endif
call neobundle#begin(expand('~/.vim/bundle/'))
NeoBundleFetch 'Shougo/neobundle.vim'

" packages
" ========
NeoBundle 'chriskempson/base16-vim'
NeoBundle 'gosukiwi/vim-atom-dark'

call neobundle#end()
filetype plugin indent on
NeoBundleCheck

" }}}
" General {{{

    set number                          " enable line numbers
    set noerrorbells visualbell t_vb=   " disable bells
    set backspace=indent,eol,start      " make backspace behave like backspace
    set laststatus=2                    " always show status bar
    set noshowmode                      " hide current mode

    " --- encoding ---
    set encoding=utf-8
    scriptencoding utf-8

" }}}
" GUI {{{

    syntax on
    set background=dark

    if has("gui_running")

        colorscheme atom-dark
        set cursorline          " highlight current line
        set linespace=12        " line spacing

        " --- disable scroll bars and tabs ---
        set guioptions-=l
        set guioptions-=L
        set guioptions-=r
        set guioptions-=R
        set guioptions-=e

        if has("gui_macvim")

            set guifont=Menlo:h17

        endif

    else

        set t_CO=256                    " use 256 colors
        colorscheme base16-solarized

    endif

" }}}
" Search {{{

set incsearch
set hlsearch
set ignorecase
set smartcase

" }}}
" Splits {{{

    " -- open splits below and to the right ---
    set splitbelow
    set splitright

    " --- navigate splits easily ---
    nmap <C-J> <C-W><C-J>
    nmap <C-K> <C-W><C-K>
    nmap <C-H> <C-W><C-H>
    nmap <C-L> <C-W><C-L>

" }}}
" Mappings {{{

    " exit insert mode with JJ
    inoremap jj <Esc>

    " set leader to ,
    let mapleader = ','

    " edit vimrc in new tab
    nmap <Leader>ev :tabedit $MYVIMRC<cr>

" }}}
" Auto-Commands {{{

    " automatically source .vimrc on save
    augroup autosourcing
        autocmd!
        autocmd BufWritePost .vimrc source %
    augroup END

" }}}
